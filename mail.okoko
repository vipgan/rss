def clean_subject(subject):
    """
    清理邮件主题，去除特殊字符、方括号 [ ] 和 Markdown 中的星号 *。
    """
    # 去除特殊字符和方括号
    subject = re.sub(r'[^\w\s]', '', subject).replace('[', '').replace(']', '')
    # 去除 Markdown 中的星号 *
    subject = re.sub(r'\*', '', subject)
    return subject

# 获取并清理邮件正文，转换链接和媒体内容为 Markdown 格式
def clean_email_body(body):
    soup = BeautifulSoup(body, 'html.parser')
    
    # 转换超链接为 Markdown 格式 [text](url)
    for link in soup.find_all('a', href=True):
        link.insert_before(f"[{link.get_text()}]({link['href']})")
        link.unwrap()
    
    # 转换图片和视频为 Markdown 格式 ![alt text](url)
    for media in soup.find_all(['img', 'video'], src=True):
        alt_text = media.get('alt', 'media')
        media.insert_before(f"[{alt_text}]({media['src']})")
        media.unwrap()
    
    # 提取正文内容并去除多余的空行
    text = soup.get_text()
    text = re.sub(r'\n\s*\n+', '\n', text)  # 去除多余的空行
    
    # 清除其他 Markdown 标记（如 *、_）和 HTML 标签
    text = re.sub(r'(\*|_)+', '', text)  # 去除 * 和 _
    text = re.sub(r'\[([^\]]+)\]\([^\)]+\)', r'[\1](\2)', text)  # 保留已转换的链接
    text = re.sub(r'<[^>]*>', '', text)  # 清除 HTML 标签

    return text.strip()

# 获取邮件正文
def get_email_body(msg):
    """
    从邮件中提取正文内容，支持多部分格式。
    """
    body = ""
    if msg.is_multipart():
        for part in msg.walk():
            content_type = part.get_content_type()
            charset = part.get_content_charset() or 'utf-8'
            
            if content_type in ['text/html', 'text/plain']:
                body = part.get_payload(decode=True).decode(charset, errors='ignore')
                break
    else:
        charset = msg.get_content_charset() or 'utf-8'
        body = msg.get_payload(decode=True).decode(charset, errors='ignore')
        
    return clean_email_body(body)